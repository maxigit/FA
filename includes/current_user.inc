<?php
/**********************************************************************
    Copyright (C) FrontAccounting, LLC.
	Released under the terms of the GNU General Public License, GPL, 
	as published by the Free Software Foundation, either version 3 
	of the License, or (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
    See the License here <http://www.gnu.org/licenses/gpl-3.0.html>.
***********************************************************************/
include_once($path_to_root . "/includes/prefs/userprefs.inc");

//--------------------------------------------------------------------------

class current_user
{

	var $loginname;
	var $username;
	var	$name;
	var $company;
	var $pos;
	var $access;

	var $logged;
	var $ui_mode = 0;
	
	var $prefs;

	function current_user()
	{
		$this->loginname = $this->username = $this->name = $this->company = "";
		$this->logged = false;

		$this->prefs = new user_prefs();
	}

	function logged_in()
	{
		return $this->logged;
	}

	function set_company($company)
	{
		$this->company = $company;
	}

	function login($company, $loginname, $password)
	{
		$this->set_company($company);

		$Auth_Result = get_user_for_login($loginname, $password);

		if (db_num_rows($Auth_Result) > 0)
		{
            $myrow = db_fetch($Auth_Result);

        	    $this->access = $myrow["full_access"];
        	    $this->name = $myrow["real_name"];
        	    $this->pos = $myrow["pos"];
        	    $this->loginname = $loginname;
        	    $this->username = $this->loginname;
        	    $this->prefs = new user_prefs($myrow);

		    update_user_visitdate($loginname);
		    $this->logged = true;

		}
		else
		{
			$this->logged = false;
		}

		return $this->logged;
	}

	function check_user_access()
	{
		global $security_groups;
		return is_array($security_groups[$this->access]);
	}

	function can_access_page($page_level)
	{
		global $security_groups;
		// first registered company has site admin privileges
		return isset($page_level) && in_array($page_level, $security_groups[$this->access])
			&& ($this->company == 0 || $page_level != 20); 
	}

	function get_db_connection()
	{
    	global $db_connections;

    	$connection = $db_connections[$this->company];

    	//print_r($connection);

    	$db = mysql_connect($connection["host"] ,
    		$connection["dbuser"], $connection["dbpassword"]);
    	mysql_select_db($connection["dbname"],$db);

		if (!defined('TB_PREF'))
			define('TB_PREF', $connection["tbpref"]);

    	return $db;
	}

	function update_prefs($price_dec, $qty_dec, $exrate_dec, $percent_dec, 
		$showgl, $showcodes, $date_format, $date_sep, $tho_sep, $dec_sep, 
		$theme, $pagesize, $show_hints, $profile, $rep_popup, $query_size, 
		$graphic_links, $lang) {
		update_user_display_prefs($this->username, $price_dec, 
			$qty_dec, $exrate_dec, $percent_dec, $showgl, $showcodes, 
			$date_format, $date_sep, $tho_sep, $dec_sep, $theme, $pagesize, 
			$show_hints, $profile, $rep_popup, $query_size, $graphic_links, $lang);

		// re-read the prefs
		$user = get_user($this->username);
		$this->prefs = new user_prefs($user);
	}
}

//--------------------------------------------------------------------------

function round2($number, $decimals=0)
{
	$delta = ($number < 0 ? -.000001 : .000001);
	return round($number+$delta, $decimals);
}

function number_format2($number, $decimals=0)
{
	global $thoseps, $decseps;
	$tsep = $thoseps[$_SESSION["wa_current_user"]->prefs->tho_sep()];
	$dsep = $decseps[$_SESSION["wa_current_user"]->prefs->dec_sep()];
	//return number_format($number, $decimals, $dsep,	$tsep);
	$delta = ($number < 0 ? -.000001 : .000001);
	return number_format($number+$delta, $decimals, $dsep,	$tsep);
}
//
//	Current ui mode.
//
function fallback_mode() {
    return $_SESSION["wa_current_user"]->ui_mode==0;
}

function price_format($number) {
    return number_format2($number,
	$_SESSION["wa_current_user"]->prefs->price_dec());
}
// 2008-06-15. Added extra parameter $stock_id and reference for $dec
//--------------------------------------------------------------------
function qty_format($number, $stock_id=null, &$dec) {
	$dec = get_qty_dec($stock_id);
    return number_format2($number, $dec);
}
// and get_qty_dec
function get_qty_dec($stock_id=null)
{
	global $path_to_root;
	include_once($path_to_root."/inventory/includes/db/items_units_db.inc");
	if ($stock_id != null)
		$dec = get_unit_dec($stock_id);
	if ($stock_id == null || $dec == -1 || $dec == null)
		$dec = $_SESSION["wa_current_user"]->prefs->qty_dec();
	return $dec;
}
//-------------------------------------------------------------------
function exrate_format($number) {
    return number_format2($number,
	$_SESSION["wa_current_user"]->prefs->exrate_dec());
}

function percent_format($number) {
    return number_format2($number,
	$_SESSION["wa_current_user"]->prefs->percent_dec());
}

function user_numeric($input) {
    global $decseps, $thoseps;

    $num = trim($input);
    $sep = $thoseps[user_tho_sep()];
    if($sep!='') $num = str_replace( $sep, '', $num);
	str_replace($sep, '', $num);
    $sep = $decseps[user_dec_sep()];
    if($sep!='.') $num = str_replace( $sep, '.', $num);

    if (!is_numeric($num))
	  return false;
    $num = (float)$num;
    if ($num == (int)$num)
	  return (int)$num;
    else
	  return $num;
}

function user_company()
{
	return $_SESSION["wa_current_user"]->company;
}

function user_pos()
{
	return $_SESSION["wa_current_user"]->pos;
}

function user_language()
{
	return $_SESSION["wa_current_user"]->prefs->language();
}

function user_qty_dec()
{
	return $_SESSION["wa_current_user"]->prefs->qty_dec();
}

function user_price_dec()
{
	return $_SESSION["wa_current_user"]->prefs->price_dec();
}

function user_exrate_dec()
{
	return $_SESSION["wa_current_user"]->prefs->exrate_dec();
}

function user_percent_dec()
{
	return $_SESSION["wa_current_user"]->prefs->percent_dec();
}

function user_show_gl_info()
{
	return $_SESSION["wa_current_user"]->prefs->show_gl_info();
}

function user_show_codes()
{
	return $_SESSION["wa_current_user"]->prefs->show_codes();
}

function user_date_format()
{
	return $_SESSION["wa_current_user"]->prefs->date_format();
}

function user_date_display()
{
	return $_SESSION["wa_current_user"]->prefs->date_display();
}

function user_date_sep()
{
	return $_SESSION["wa_current_user"]->prefs->date_sep();
}

function user_tho_sep()
{
	return $_SESSION["wa_current_user"]->prefs->tho_sep();
}

function user_dec_sep()
{
	return $_SESSION["wa_current_user"]->prefs->dec_sep();
}

function user_theme()
{
	return $_SESSION["wa_current_user"]->prefs->get_theme();
}

function user_pagesize()
{
	return $_SESSION["wa_current_user"]->prefs->get_pagesize();
}

function user_hints()
{
	return $_SESSION["wa_current_user"]->prefs->show_hints();
}

function user_print_profile()
{
	return $_SESSION["wa_current_user"]->prefs->print_profile();
}

function user_rep_popup()
{
	return $_SESSION["wa_current_user"]->prefs->rep_popup();
}

function user_query_size()
{
	return $_SESSION["wa_current_user"]->prefs->query_size();
}

function user_graphic_links()
{
	return $_SESSION["wa_current_user"]->prefs->graphic_links();
}

function set_user_prefs($price_dec, $qty_dec, $exrate_dec, $percent_dec, $showgl, $showcodes,
	$date_format, $date_sep, $tho_sep, $dec_sep, $theme, $pagesize, $show_hints,
	$print_profile, $rep_popup, $query_size, $graphic_links, $lang)
{

	$_SESSION["wa_current_user"]->update_prefs($price_dec, $qty_dec, $exrate_dec, $percent_dec, $showgl, $showcodes,
		$date_format, $date_sep, $tho_sep, $dec_sep, $theme, $pagesize, $show_hints,
		$print_profile, $rep_popup, $query_size, $graphic_links, $lang);
}

function add_user_js_data() {
	global $path_to_root, $thoseps, $decseps;

	$ts = $thoseps[user_tho_sep()];
	$ds = $decseps[user_dec_sep()];

    $js = "\n<script type=\"text/javascript\">\n"
	  . "<!--\n"
	  . "var user = {\n"
	  . "theme: '". $path_to_root . '/themes/'. 'default' /*user_theme()*/.'/'."',\n"
	  . "loadtxt: '"._('Requesting data...')."',\n"
	  . "ts: '$ts',\n"
	  . "ds: '$ds',\n"
	  . "pdec : " . user_price_dec() . "}\n--></script>";

  add_js_source($js);
}

//--------------------------------------------------------------------------

?>